{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-product/add-product.component.ts","webpack:///src/app/adminlogin/adminlogin.component.ts","webpack:///src/app/allaccounts/allaccounts.component.ts","webpack:///src/app/allrequests/allrequests.component.ts","webpack:///src/app/alltransactions/alltransactions.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/edit-order/edit-order.component.ts","webpack:///src/app/edit-product/edit-product.component.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/material.module.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/products/products.component.ts","webpack:///src/app/resetcustomerpassword/resetcustomerpassword.component.ts","webpack:///src/app/resetpassword/resetpassword.component.ts","webpack:///src/app/rootReducer.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/farmer.service.ts","webpack:///src/app/services/superuser.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/signin/signin.component.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/testcomponent/test.component.ts","webpack:///src/app/transactiondetails/transactiondetails.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddProductComponent","appStore","formBuilder","farmerService","router","addProductForm","group","required","getState","token","localStorage","getItem","JSON","parse","productBody","value","console","log","addProduct","subscribe","response","navigate","$event","dispatch","type","parentLogOut","onSubmit","selector","template","styleUrls","AdminloginComponent","authService","signInForm","AllaccountsComponent","superuserservice","onGetFarmers","getFarmers","userCategory","users","getCustomers","farmerActivationToggle","customerActivationToggle","onGetCustomers","AllrequestsComponent","onGetRequests","getRequestsLog","requestsLog","AlltransactionsComponent","onGetTransactions","getTransactions","orders","routes","AppRoutingModule","forRoot","imports","AppComponent","title","MY_ROUTES","path","loadChildren","m","FarmerModule","component","canActivate","AppModule","provide","useValue","useClass","multi","preloadingStrategy","declarations","providers","bootstrap","EditOrderComponent","getCurrentNavigation","extras","state","orderId","setItem","dateForm","getOrder","order","products","priceTotal","calcTotal","removeItem","total","item","price","qty","readydate","body","status","updateOrderStatus","EditProductComponent","productId","editProductForm","getProduct","product","get","setValue","productName","productFormInfo","_id","editProduct","AuthGuard","currentRoute","currentState","nextState","providedIn","HomeComponent","roleAssign","user","farmer","role","MaterialModule","NavBarComponent","logoutEvent","farmerInfo","navToken","emit","OrdersComponent","getOrders","viewOrderByStatus","onViewByStatus","ProductsComponent","getProducts","deleteProduct","ResetcustomerpasswordComponent","customerId","resetForm","onGetCustomer","getCustomer","customer","resetFormVal","changeCustPass","ResetpasswordComponent","farmerId","onGetFarmer","getFarmer","changePass","initialState","rootReducer","action","stringify","payload","AuthService","http","userInfo","post","creds","FarmerService","patch","SuperuserService","newPass","TokenInterceptorService","next","tokenizedRequest","clone","setHeaders","Authorization","handle","SigninComponent","userFormInfo","signIn","accessToken","SignupComponent","signUpForm","signUp","TestComponent","TransactiondetailsComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { FarmerService } from '../services/farmer.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms'\r\n\r\ninterface IProductDetails {\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface IProduct {\r\n  _id: string,\r\n  product: IProductDetails,\r\n  farmer: IFarmerDetails\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  template: `\r\n   \r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n    <div>\r\n      <form [formGroup]=\"addProductForm\" (ngSubmit)=\"onSubmit()\" >\r\n\r\n        <div>\r\n          <label for=\"productName\">Product Name: </label>  <br>\r\n          <input type=\"text\" class=\"form-control\" id=\"productName\" formControlName=\"productName\">\r\n        </div>\r\n        <div>\r\n          <label for=\"price\">Price: </label> <br>\r\n          <input type=\"number\" class=\"form-control\" id=\"price\" formControlName=\"price\">\r\n        </div>\r\n        <div>\r\n          <label for=\"qty\">Quantity: </label> <br>\r\n          <input type=\"number\" class=\"form-control\" id=\"qty\" formControlName=\"qty\">\r\n        </div>\r\n\r\n        <button type=\"submit\">Add Product!</button>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  \r\n  `,\r\n  styleUrls: ['./add-product.component.css']\r\n})\r\n\r\nexport class AddProductComponent implements OnInit {\r\n\r\n  token: string\r\n  productId: string\r\n  addProductForm: FormGroup\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private formBuilder: FormBuilder,\r\n    private farmerService: FarmerService,\r\n    private router: Router\r\n  ) {\r\n\r\n    this.addProductForm = formBuilder.group({\r\n      \"productName\": ['', [Validators.required]],\r\n      \"price\": ['', [Validators.required]],\r\n      \"qty\": ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    const productBody = this.addProductForm.value\r\n    console.log(\"productFormInfo: \", productBody)\r\n\r\n    this.farmerService.addProduct(productBody)\r\n      .subscribe((response) => {\r\n        console.log('addProduct response: ', response)\r\n        this.router.navigate([\"products\"])\r\n      })\r\n\r\n    // this.farmerService.editProduct(productBody)\r\n    //   .subscribe((response) => {\r\n    //     console.log('editProduct Response: ', response)\r\n    //     this.router.navigate([\"products\"])\r\n    //   })\r\n\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms'\r\n\r\nimport { Router } from '@angular/router'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\ninterface IResponse {\r\n  accessToken: String\r\n}\r\n\r\n@Component({\r\n  selector: 'app-adminlogin',\r\n  template: `<body>\r\n\r\n  <div>\r\n    <h1>Administrator Sign In</h1>\r\n  </div>\r\n\r\n  <div>\r\n  <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\r\n  \r\n    <div>\r\n        <label for=\"email\">Email </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <br>\r\n    <div>\r\n        <label for=\"password\">Password </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"password\" formControlName=\"password\">\r\n    </div>\r\n    <div class=\"signinbutton\">\r\n      <button type=\"submit\">Sign in!</button>\r\n    </div>\r\n\r\n   \r\n    </form>\r\n\r\n   \r\n  </div>\r\n\r\n\r\n</body>\r\n`,\r\n  styleUrls: ['./adminlogin.component.css']\r\n})\r\nexport class AdminloginComponent implements OnInit {\r\n\r\n\r\n  signInForm: FormGroup\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    @Inject('AppStore') private appStore\r\n  ) {\r\n    this.signInForm = formBuilder.group({\r\n      \"email\": ['', [Validators.required]],\r\n      \"password\": ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n\r\n\r\n  }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SuperuserService } from '../services/superuser.service';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-allaccounts',\r\n  template: `\r\n  \r\n  <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n  <button type=\"button\" class=\"user\" (click)=\"onGetFarmers()\" >Show Farmers</button>\r\n  <button type=\"button\" class=\"user\" (click)=\"onGetCustomers()\" >Show Customers</button>\r\n\r\n\r\n  <div *ngIf=\"userCategory == 'farmers' ; else customers \"> \r\n\r\n  <div class=\"producttablediv\">\r\n    <div class=\"producttable\">\r\n      <table>\r\n      <thead>\r\n          <tr>\r\n              <th>ID#</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Rating</th>\r\n              <th>Role</th>\r\n              <th>Activation Status</th>\r\n           \r\n              \r\n              <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of users\">\r\n              <td>{{ item._id}}</td>\r\n              <td>{{ item.firstName + ' ' + item.lastName}}</td>\r\n              <td>{{ item.email}}</td>\r\n              <td>{{ item.rating }}</td>\r\n              <td>{{ item.role }}</td>\r\n\r\n              <td> \r\n                <button *ngIf=\"item.activated ; else deactivated\" class=\"activated\" (click)=\"onFarmerActivationToggle(item._id)\"> Activated </button>\r\n              </td>\r\n                    <ng-template #deactivated><button class=\"deactivated\" (click)=\"onFarmerActivationToggle(item._id)\"> Deactivated </button></ng-template>\r\n              <td>\r\n              <button class=\"activated\" [routerLink]=\"['', 'resetpassword']\" [state]=\"{id: item._id}\"> Reset User Password </button>\r\n              </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <ng-template #customers>\r\n\r\n <div class=\"producttablediv\">\r\n    <div class=\"producttable\">\r\n      <table>\r\n      <thead>\r\n          <tr>\r\n              <th>ID#</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Activation Status</th>\r\n              <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of users\">\r\n              <td>{{ item._id}}</td>\r\n              <td>{{ item.firstName + ' ' + item.lastName}}</td>\r\n              <td>{{ item.email}}</td>\r\n\r\n              <td> \r\n                <button *ngIf=\"item.activated ; else deactivated\" class=\"activated\" (click)=\"onCustomerActivationToggle(item._id)\"> Activated </button>\r\n              </td>\r\n                    <ng-template #deactivated><button class=\"deactivated\" (click)=\"onCustomerActivationToggle(item._id)\"> Deactivated </button></ng-template>\r\n\r\n              <td>\r\n                <!-- <button class=\"activated\" (click)=\"navToResetPass(item._id)\"> Reset User Password </button> -->\r\n                <button class=\"activated\" [routerLink]=\"['', 'resetcustomerpassword']\" [state]=\"{id: item._id}\"> Reset User Password </button>\r\n          \r\n              </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  </ng-template>\r\n\r\n\r\n\r\n  `,\r\n  styleUrls: ['./allaccounts.component.css']\r\n})\r\nexport class AllaccountsComponent implements OnInit {\r\n\r\n  token: string\r\n  users\r\n  userCategory: string\r\n\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.onGetFarmers()\r\n\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onGetFarmers() {\r\n    this.superuserservice.getFarmers()\r\n      .subscribe((response) => {\r\n        console.log('onGetFarmers response: ', response)\r\n        this.userCategory = 'farmers'\r\n        this.users = response\r\n\r\n\r\n      })\r\n  }\r\n\r\n  onGetCustomers() {\r\n    this.superuserservice.getCustomers()\r\n      .subscribe((response) => {\r\n        console.log('onGetCustomers response: ', response)\r\n        this.userCategory = 'customers'\r\n        this.users = response\r\n      })\r\n  }\r\n\r\n  onFarmerActivationToggle(id) {\r\n    this.superuserservice.farmerActivationToggle(id)\r\n      .subscribe((response) => {\r\n        console.log('onFarmerActivationToggle response: ', response)\r\n        this.onGetFarmers()\r\n      })\r\n  }\r\n\r\n  onCustomerActivationToggle(id) {\r\n    this.superuserservice.customerActivationToggle(id)\r\n      .subscribe((response) => {\r\n        console.log('onCustomerActivationToggle response: ', response)\r\n        this.onGetCustomers()\r\n      })\r\n  }\r\n\r\n  navToResetPass(id) {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SuperuserService } from '../services/superuser.service';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-allrequests',\r\n  template: `\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n  \r\n    <div class=\"producttablediv\">\r\n    <div class=\"producttable\">\r\n      <table>\r\n      <thead>\r\n          <tr>\r\n              <th>Request </th>\r\n              \r\n           \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of requestsLog\">\r\n              <td>{{ item }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  \r\n  `,\r\n  styleUrls: ['./allrequests.component.css']\r\n})\r\nexport class AllrequestsComponent implements OnInit {\r\n  token: string\r\n  requestsLog\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.onGetRequests()\r\n\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onGetRequests() {\r\n    this.superuserservice.getRequestsLog()\r\n      .subscribe((response) => {\r\n        console.log('from onGetRequest response: ', response)\r\n        this.requestsLog = response\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SuperuserService } from '../services/superuser.service';\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-alltransactions',\r\n  template: `\r\n  <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n\r\n  <div class=\"producttablediv\">\r\n    <div class=\"producttable\">\r\n      <table>\r\n      <thead>\r\n          <tr>\r\n              <th>Order ID#</th>\r\n              <th>Merchant Information</th>\r\n              <th>Customer Information</th>\r\n              <th>Status</th>\r\n              <th>Action</th>\r\n           \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of orders\">\r\n              <td>{{ item._id}}</td>\r\n              <td>\r\n                  {{ item.farmer.firstName + ' ' + item.farmer.lastName}} <br>\r\n                  {{item.farmer.email}} <br>\r\n                  Rating: {{item.farmer.rating}}\r\n              </td>\r\n              <td>\r\n                  {{ item.customer.firstName + ' ' + item.customer.lastName}} <br>\r\n                  {{item.customer.email}}\r\n              </td>\r\n              <td>\r\n                  {{ item.status}} <br>\r\n              </td>\r\n              <td>\r\n                  <button [routerLink]=\"['', 'transactiondetails']\" [state]= \"{id: item._id}\" >View Items</button>\r\n              </td>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  \r\n  `,\r\n  styleUrls: ['./alltransactions.component.css']\r\n})\r\nexport class AlltransactionsComponent implements OnInit {\r\n\r\n  token: string\r\n  orders\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.onGetTransactions()\r\n\r\n  }\r\n\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onGetTransactions() {\r\n    this.superuserservice.getTransactions()\r\n      .subscribe((response) => {\r\n        console.log('from Transactions response: ', response)\r\n        this.orders = response\r\n      })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\nexport class AppComponent {\r\n  title = 'FarmerFrontEnd';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { createStore } from 'redux'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { TestComponent } from './testcomponent/test.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { AddProductComponent } from './add-product/add-product.component';\r\nimport { EditProductComponent } from './edit-product/edit-product.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { EditOrderComponent } from './edit-order/edit-order.component';\r\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\r\nimport { AllaccountsComponent } from './allaccounts/allaccounts.component';\r\n\r\nimport { MaterialModule } from './material.module';\r\n\r\nimport { TokenInterceptorService } from './services/token-interceptor.service'\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport { AlltransactionsComponent } from './alltransactions/alltransactions.component';\r\nimport { AllrequestsComponent } from './allrequests/allrequests.component';\r\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\r\nimport { ResetcustomerpasswordComponent } from './resetcustomerpassword/resetcustomerpassword.component'\r\nimport { TransactiondetailsComponent } from './transactiondetails/transactiondetails.component';\r\n\r\n\r\n\r\nconst appStore = createStore(rootReducer)\r\n\r\nconst MY_ROUTES: Routes = [\r\n  {\r\n    path: 'farmer',\r\n    loadChildren: () => import('./farmer/farmer.module').then(m => m.FarmerModule)\r\n  },\r\n  { path: '', component: HomeComponent },\r\n  { path: 'signin', component: SigninComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n\r\n  {\r\n    path: 'products',\r\n    component: ProductsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'addproduct',\r\n    component: AddProductComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'editproduct',\r\n    component: EditProductComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'orders',\r\n    component: OrdersComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'editorder',\r\n    component: EditOrderComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'adminlogin',\r\n    component: AdminloginComponent\r\n  },\r\n  {\r\n    path: 'allaccounts',\r\n    component: AllaccountsComponent\r\n  },\r\n  {\r\n    path: 'alltransactions',\r\n    component: AlltransactionsComponent\r\n  },\r\n  {\r\n    path: 'allrequests',\r\n    component: AllrequestsComponent\r\n  },\r\n  {\r\n    path: 'resetpassword',\r\n    component: ResetpasswordComponent\r\n  },\r\n  {\r\n    path: 'resetcustomerpassword',\r\n    component: ResetcustomerpasswordComponent\r\n  },\r\n  {\r\n    path: 'transactiondetails',\r\n    component: TransactiondetailsComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SignupComponent,\r\n    SigninComponent,\r\n    NavBarComponent,\r\n    TestComponent,\r\n    OrdersComponent,\r\n    ProductsComponent,\r\n    AddProductComponent,\r\n    EditProductComponent,\r\n    EditOrderComponent,\r\n    AdminloginComponent,\r\n    AllaccountsComponent,\r\n    AlltransactionsComponent,\r\n    AllrequestsComponent,\r\n    ResetpasswordComponent,\r\n    ResetcustomerpasswordComponent,\r\n    TransactiondetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(MY_ROUTES, { preloadingStrategy: PreloadAllModules }),\r\n    StoreModule.forRoot({}, {}),\r\n    BrowserAnimationsModule, // this might be where an issue will be. Look here ==================\r\n    MaterialModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatToolbarModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: 'AppStore', useValue: appStore },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FarmerService } from '../services/farmer.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface ICustomerDetails {\r\n  email: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  _id: string\r\n}\r\n\r\ninterface IProductDetails {\r\n  productId: string,\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\n// interface IProduct {\r\n//   _id: string,\r\n//   product: IProductDetails,\r\n//   farmer: IFarmerDetails\r\n// }\r\n\r\ninterface IOrder {\r\n  _id: string,\r\n  status: string,\r\n  customer: ICustomerDetails,\r\n  farmer: IFarmerDetails,\r\n  products: Array<IProductDetails>,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-order',\r\n  template: `\r\n    <p>this is edit order</p>\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n    <h1>Order Details </h1>\r\n    <p>\r\n    Order ID: {{this.order._id}}<br>\r\n    Status: {{this.order.status}}<br><br>\r\n    Customer Name: {{this.order.customer.firstName}} {{this.order.customer.lastName}} <br>\r\n    Customer E-mail: {{this.order.customer.email}}\r\n    </p>\r\n\r\n    <div class=\"ordertablediv\">\r\n  <div class=\"ordertable\">\r\n    <table>\r\n    <thead>\r\n         <tr>\r\n            <th>Product</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n         </tr>\r\n      </thead>\r\n      <tbody>\r\n         <tr *ngFor=\"let item of this.order.products\">\r\n            <td>{{ item.productName }}</td>\r\n            <td>{{ item.price }}</td>\r\n            <td>{{ item.qty }}</td>\r\n         </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n\r\n  <p class=\"ordertotal\">Order total: $ {{priceTotal}}</p>\r\n\r\n  <div *ngIf=\"order.status == 'pending'; else complete\">\r\n\r\n  \r\n    <form [formGroup]=\"dateForm\">\r\n      <label for=\"readydate\">When will this order be ready? </label>\r\n      <input type=\"date\" id=\"readydate\" name=\"readydate\" formControlName=\"readydate\">\r\n    </form>\r\n\r\n    <div class=\"ready\">\r\n      <div class=\"readybutton\">\r\n        <button class=\"ready\" (click)=\"onReady()\"> Ready </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #complete>\r\n    <div class=\"ready\">\r\n      <button class=\"complete\" (click)=\"onComplete()\"> Complete </button>\r\n    </div>\r\n  </ng-template>\r\n\r\n  `,\r\n  styleUrls: ['./edit-order.component.css']\r\n})\r\n\r\n\r\nexport class EditOrderComponent implements OnInit {\r\n\r\n  token: string\r\n  orderId: string\r\n  order: IOrder\r\n  priceTotal: number\r\n  dateForm: FormGroup\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private formBuilder: FormBuilder,\r\n    private farmerService: FarmerService,\r\n    private router: Router\r\n  ) {\r\n\r\n    console.log(\"this.router.getCurrentNavigation().extras.state: \", this.router.getCurrentNavigation().extras.state)\r\n    console.log('hello1')\r\n\r\n    if (this.router.getCurrentNavigation().extras.state) {\r\n      this.orderId = this.router.getCurrentNavigation().extras.state.id\r\n      localStorage.setItem('orderId', this.orderId)\r\n    } else {\r\n      this.orderId = localStorage.getItem('orderId')\r\n    }\r\n\r\n\r\n    this.dateForm = formBuilder.group({\r\n      \"readydate\": ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.farmerService.getOrder(this.orderId)\r\n      .subscribe((response: IOrder) => {\r\n        console.log(\"getOrder Response: \", response)\r\n        this.order = response\r\n        console.log(\"this.order.products: \", this.order.products)\r\n        this.priceTotal = this.calcTotal()\r\n        console.log(\"this.priceTotal: \", this.priceTotal)\r\n\r\n      })\r\n\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    localStorage.removeItem('orderId')\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  calcTotal() {\r\n    let total: number = 0\r\n    for (let item of this.order.products) {\r\n      total = total + (item.price * item.qty)\r\n    }\r\n    return total\r\n  }\r\n\r\n  onReady() {\r\n    console.log('onReady()')\r\n    console.log(\"this.dateForm.value: \", this.dateForm.value)\r\n    const readydate = this.dateForm.value.readydate\r\n\r\n    const body = {\r\n      status: 'ready',\r\n      readydate: readydate\r\n    }\r\n\r\n    console.log('body: ', body)\r\n    this.farmerService.updateOrderStatus(this.orderId, body)\r\n      .subscribe((response) => {\r\n        console.log('onReady response: ', response)\r\n        localStorage.removeItem('orderId')\r\n        this.router.navigate(['orders'])\r\n      })\r\n\r\n  }\r\n\r\n  onComplete() {\r\n    console.log('onComplete()')\r\n\r\n    const body = {\r\n      status: 'complete',\r\n    }\r\n\r\n    this.farmerService.updateOrderStatus(this.orderId, body)\r\n      .subscribe((response) => {\r\n        console.log('onReady response, should be \"complete\": ', response)\r\n        localStorage.removeItem('orderId')\r\n        this.router.navigate(['orders'])\r\n      })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FarmerService } from '../services/farmer.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms'\r\n\r\ninterface IProductDetails {\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface IProduct {\r\n  _id: string,\r\n  product: IProductDetails,\r\n  farmer: IFarmerDetails\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-product',\r\n  template: `\r\n    <p>this is edit product</p>\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n    <div>\r\n      <form [formGroup]=\"editProductForm\" (ngSubmit)=\"onSubmit()\" >\r\n\r\n        <div>\r\n          <label for=\"productName\">Product Name: </label> <br>\r\n          <input type=\"text\" class=\"form-control\" id=\"productName\" formControlName=\"productName\">\r\n        </div>\r\n        <div>\r\n          <label for=\"price\">Price: </label> <br>\r\n          <input type=\"number\" class=\"form-control\" id=\"price\" formControlName=\"price\" step=\"any\" min=\"1\">\r\n        </div>\r\n        <div>\r\n          <label for=\"qty\">Quantity: </label> <br>\r\n          <input type=\"number\" class=\"form-control\" id=\"qty\" formControlName=\"qty\">\r\n        </div>\r\n\r\n        <button type=\"submit\">Update!</button>\r\n\r\n      </form>\r\n    </div>\r\n\r\n\r\n\r\n\r\n  \r\n  `,\r\n  styleUrls: ['./edit-product.component.css']\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n\r\n  token: string\r\n  productId: string\r\n  editProductForm: FormGroup\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private formBuilder: FormBuilder,\r\n    private farmerService: FarmerService,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.router.getCurrentNavigation().extras.state) {\r\n      this.productId = this.router.getCurrentNavigation().extras.state.id\r\n      localStorage.setItem('productId', this.productId)\r\n    } else {\r\n      this.productId = localStorage.getItem('productId')\r\n    }\r\n\r\n\r\n\r\n    this.editProductForm = formBuilder.group({\r\n      \"productName\": ['', [Validators.required]],\r\n      \"price\": ['', [Validators.required]],\r\n      \"qty\": ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.farmerService.getProduct(this.productId)\r\n      .subscribe((response: IProduct) => {\r\n        console.log(\"Response: \", response)\r\n        const product = response.product\r\n\r\n        this.editProductForm.get(\"productName\").setValue(product.productName)\r\n        this.editProductForm.get(\"price\").setValue(product.price)\r\n        this.editProductForm.get(\"qty\").setValue(product.qty)\r\n      })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    const productFormInfo = this.editProductForm.value\r\n    console.log(\"productFormInfo: \", productFormInfo)\r\n\r\n    const productBody = { ...productFormInfo, _id: this.productId }\r\n\r\n    this.farmerService.editProduct(productBody)\r\n      .subscribe((response) => {\r\n        console.log('editProduct Response: ', response)\r\n        localStorage.removeItem('productId')\r\n        this.router.navigate([\"products\"])\r\n      })\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    localStorage.removeItem('productId')\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { CanActivate, CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanDeactivate<unknown> {\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(): boolean {\r\n    if (this.appStore.getState().token) {\r\n      return true\r\n    } else if (localStorage.getItem('token')) {\r\n      return true\r\n    } else {\r\n      this.router.navigate(['signin'])\r\n    }\r\n  }\r\n\r\n  canDeactivate(\r\n    component: unknown,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n// next: ActivatedRouteSnapshot,\r\n// state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n// return true;","\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport * as jwt_decode from 'jwt-decode'\r\nimport { Router } from '@angular/router';\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface IUser {\r\n  exp: number,\r\n  farmer: IFarmerDetails\r\n  iat: number\r\n}\r\n\r\n// interface ITokenObject {\r\n//   token: string,\r\n//   userInfo: IUser\r\n// }\r\n\r\n// SHAWN READ THIS WHEN YOU WAKE UP. You start with the first bullet point for Super user requirement. You have to change what the links do in the NavBar. Use NgIf. \r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  template: `\r\n\r\n    <div *ngIf=\"token; else signin\">\r\n\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n          <div *ngIf=\"role == 'farmer'; else administrator\" >\r\n            <p class=\"welcome\">Welcome! You're logged in. Feel free to view your orders or product inventory.</p>\r\n          </div>\r\n\r\n          <ng-template #administrator>\r\n          <p class=\"welcome\">Welcome to the Administrator Dashboard</p>\r\n          </ng-template>\r\n\r\n    </div>\r\n    <ng-template #signin>\r\n      <body>\r\n    <div class=\"center\">\r\n        <p class=\"title\">Simply Fresh<p>\r\n        <p class=\"caption\">Hi there, Farmer. Selling your goods just got easier. <p>\r\n    </div>\r\n    <div class=\"buttoncenter\">\r\n        <button class=\"sign-up\" [routerLink]=\"['signup']\"> Sign Up!</button>\r\n        <button class=\"sign-up\" [routerLink]=\"['signin']\"> Sign In!</button>\r\n    </div>\r\n</body>\r\n    </ng-template>\r\n\r\n  `,\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  token: string\r\n  role: string\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n      console.log('this.appStore.getState().token: ', this.appStore.getState().token)\r\n      this.roleAssign()\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n      this.roleAssign()\r\n\r\n    }\r\n\r\n    // this might be your logout issue here. Fix it.\r\n\r\n    // const user: IUser = jwt_decode(this.token)\r\n    // console.log('user: ', user.farmer)\r\n    // this.role = user.farmer.role\r\n    // console.log('this.role: ', this.role)\r\n\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([''])\r\n  }\r\n\r\n  roleAssign() {\r\n    const user: IUser = jwt_decode(this.token)\r\n    console.log('user: ', user.farmer)\r\n    this.role = user.farmer.role\r\n    console.log('this.role: ', this.role)\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\n\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\nimport { MatInputModule } from '@angular/material/input'\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [MatButtonModule, MatFormFieldModule, MatToolbarModule, MatRadioModule, MatTableModule, MatInputModule],\r\n    exports: [MatButtonModule, MatFormFieldModule, MatToolbarModule, MatRadioModule, MatTableModule, MatInputModule]\r\n})\r\n\r\nexport class MaterialModule { }\r\n","import { Component, OnInit, Inject, Input, EventEmitter, Output } from '@angular/core';\r\nimport * as jwt_decode from 'jwt-decode'\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface IUser {\r\n  exp: number,\r\n  farmer: IFarmerDetails\r\n  iat: number\r\n}\r\n\r\ninterface ITokenObject {\r\n  token: string,\r\n  userInfo: IUser\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  template: `\r\n  \r\n<div *ngIf=\"farmerInfo.farmer.role == 'farmer'; else administrator\">\r\n\r\n  <div class=\"topnav\">\r\n    <a class=\"active\" [routerLink]=\"['']\">Simply Fresh.</a>\r\n\r\n    <a [routerLink]=\"['','orders']\">My Orders</a>\r\n    <a [routerLink]=\"['','products']\">My Products</a>\r\n  \r\n\r\n    <div class=\"container\">\r\n      <p class=\"user\">Hi {{farmerInfo.farmer.firstName}}!</p>\r\n      <button class=\"logout\" (click)=onLogout()>Logout</button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<ng-template #administrator>\r\n\r\n<div class=\"admintopnav\">\r\n    <a class=\"active\" [routerLink]=\"['']\">Simply Fresh.</a>\r\n\r\n\r\n\r\n    <a [routerLink]=\"['','allaccounts']\">View All Accounts</a>\r\n    <a [routerLink]=\"['','alltransactions']\">View All Transactions</a>\r\n    <a [routerLink]=\"['','allrequests']\">View All Requests</a>\r\n  \r\n\r\n    <div class=\"container\">\r\n      <p class=\"user\">Hi {{farmerInfo.farmer.firstName}}!</p>\r\n      <button class=\"logout\" (click)=onLogout()>Logout</button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n  `,\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  @Input() navToken\r\n  farmerInfo;\r\n\r\n  @Output() logoutEvent = new EventEmitter()\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.farmerInfo = jwt_decode(this.navToken)\r\n  }\r\n\r\n\r\n  onLogout() {\r\n    this.logoutEvent.emit()\r\n  }\r\n\r\n}\r\n\r\n// <div style=\"padding-left:16px\">\r\n//   <button [routerLink]=\"['test']\" >Test</button>\r\n// </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FarmerService } from '../services/farmer.service';\r\n\r\n\r\ninterface IProductDetails {\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface ICustomerDetails {\r\n  email: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  _id: string\r\n}\r\n\r\ninterface IProduct {\r\n  _id: string,\r\n  product: IProductDetails,\r\n  farmer: IFarmerDetails\r\n}\r\n\r\ninterface IOrder {\r\n  _id: string,\r\n  status: string,\r\n  customer: ICustomerDetails,\r\n  farmer: IFarmerDetails,\r\n  products: Array<IProduct>,\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  template: `\r\n    \r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n\r\n  <div class=\"statusbuttons\">\r\n      \r\n        View Orders by Status: \r\n        <button class=\"statusbutton\" (click)=\"onViewByStatus('pending')\" >Pending</button>\r\n        <button class=\"statusbutton\"  (click)=\"onViewByStatus('ready')\">Ready</button>\r\n        <button class=\"statusbutton\" (click)=\"onViewByStatus('complete')\">Complete</button>\r\n      \r\n  <div>\r\n\r\n\r\n    <div class=\"producttablediv\">\r\n  <div class=\"producttable\">\r\n    <table>\r\n    <thead>\r\n         <tr>\r\n            <th>Order Id</th>\r\n            <th>Order Status</th>\r\n            <th>Customer Name</th>\r\n            \r\n            \r\n            <th>Action</th>\r\n         </tr>\r\n      </thead>\r\n      <tbody>\r\n         <tr *ngFor=\"let item of orders\">\r\n            <td>{{ item._id}}</td>\r\n            <td>{{ item.status }}</td>\r\n            <td>{{ item.customer.firstName + ' ' + item.customer.lastName}}</td>\r\n\r\n            <td>\r\n              <a class=\"edit\" [routerLink]=\"['','editorder']\" [state]=\"{id: item._id}\"> Edit </a>\r\n            </td>\r\n\r\n         </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n\r\n\r\n  `,\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  token: string\r\n  orders\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private router: Router,\r\n    private farmerService: FarmerService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    console.log('orders ')\r\n\r\n    this.farmerService.getOrders()\r\n      .subscribe((response: IOrder) => {\r\n        this.orders = response\r\n        // console.log('RESPONSE: ', response)\r\n        // console.log(\"this.orders[0]._id: \", this.orders[0]._id)\r\n\r\n      })\r\n  }\r\n\r\n  onViewByStatus(status) {\r\n    this.farmerService.viewOrderByStatus(status)\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.orders = response\r\n      })\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FarmerService } from '../services/farmer.service';\r\nimport { Router } from '@angular/router'\r\n\r\n\r\n\r\ninterface IProductDetails {\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface IProduct {\r\n  _id: string,\r\n  product: IProductDetails,\r\n  farmer: IFarmerDetails\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  template: `\r\n \r\n  <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n  <h1>Your product inventory</h1>\r\n  <div class=\"addaproduct\">\r\n      <a class=\"addproduct\" [routerLink]=\"['', 'addproduct']\">Add a product</a>\r\n  </div>\r\n\r\n  <br>\r\n\r\n  <div class=\"producttablediv\">\r\n    <div class=\"producttable\">\r\n      <table>\r\n      <thead>\r\n          <tr>\r\n              <th>Product</th>\r\n              <th>Price</th>\r\n              <th>Quantity</th>\r\n              <th>Merchant</th>\r\n              <th>Merchant Rating</th>\r\n              \r\n              <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of products\">\r\n              <td>{{ item.product.productName }}</td>\r\n              <td>{{ item.product.price }}</td>\r\n              <td>{{ item.product.qty }}</td>\r\n              <td>{{ item.farmer.firstName }}</td>\r\n              <td>{{ item.farmer.rating}}</td>\r\n              <td>\r\n                <a [routerLink]=\"['', 'editproduct']\" class=\"edit\" [state]=\"{id: item._id}\">Edit</a>\r\n                <button type=\"button\" class=\"delete\" (click)=\"onDelete(item._id)\" >Delete</button>\r\n              </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n`,\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  token: string\r\n  products\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private farmerService: FarmerService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.farmerService.getProducts()\r\n      .subscribe((response: IProduct) => {\r\n        this.products = response\r\n        // console.log(\"this.products[0]._id: \", this.products[0]._id)\r\n      })\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onDelete(productId: string) {\r\n    console.log(\"onDelete productId: \", productId)\r\n    this.farmerService.deleteProduct(productId)\r\n      .subscribe((response) => {\r\n        console.log('onDelete response: ', response)\r\n\r\n        this.farmerService.getProducts()\r\n          .subscribe((response) => {\r\n            this.products = response\r\n          })\r\n      })\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SuperuserService } from '../services/superuser.service';\r\nimport { Router } from '@angular/router'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-resetcustomerpassword',\r\n  template: `\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n    <h1>Change Password for {{customer.firstName + ' ' + customer.lastName}}</h1>\r\n\r\n    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div>\r\n          <label for=\"newPassword\">New Password: </label> <br>\r\n          <input type=\"text\" class=\"form-control\" id=\"newPassword\" formControlName=\"newPassword\">\r\n      </div>\r\n      <br>\r\n      \r\n      <div class=\"signinbutton\">\r\n        <button type=\"submit\">Change Password!</button>\r\n      </div>\r\n    </form>\r\n\r\n  `\r\n  ,\r\n  styleUrls: ['./resetcustomerpassword.component.css']\r\n})\r\nexport class ResetcustomerpasswordComponent implements OnInit {\r\n\r\n  resetForm: FormGroup\r\n  token: string\r\n  customerId: string\r\n  customer\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    if (this.router.getCurrentNavigation().extras.state) {\r\n      this.customerId = this.router.getCurrentNavigation().extras.state.id\r\n      localStorage.setItem('customerId', this.customerId)\r\n    } else {\r\n      this.customerId = localStorage.getItem('customerId')\r\n    }\r\n\r\n    this.resetForm = formBuilder.group({\r\n      \"newPassword\": ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.onGetCustomer(this.customerId)\r\n\r\n  }\r\n\r\n  onGetCustomer(id) {\r\n    this.superuserservice.getCustomer(id)\r\n      .subscribe((response) => {\r\n        console.log('onGetcustomer response: ', response)\r\n        this.customer = response\r\n      })\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onSubmit() {\r\n    const resetFormVal = this.resetForm.value\r\n    console.log('resetFormVal: ', resetFormVal)\r\n\r\n    this.superuserservice.changeCustPass(this.customerId, resetFormVal)\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.router.navigate(['allaccounts'])\r\n      })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SuperuserService } from '../services/superuser.service';\r\nimport { Router } from '@angular/router'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  template: `\r\n    <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n    <h1>Change Password for {{farmer.firstName + ' ' + farmer.lastName}}</h1>\r\n\r\n    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div>\r\n          <label for=\"newPassword\">New Password: </label> <br>\r\n          <input type=\"text\" class=\"form-control\" id=\"newPassword\" formControlName=\"newPassword\">\r\n      </div>\r\n      <br>\r\n      \r\n      <div class=\"signinbutton\">\r\n        <button type=\"submit\">Change Password!</button>\r\n      </div>\r\n    </form>\r\n\r\n  `\r\n  ,\r\n  styleUrls: ['./resetpassword.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  resetForm: FormGroup\r\n  token: string\r\n  farmerId: string\r\n  farmer\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    if (this.router.getCurrentNavigation().extras.state) {\r\n      this.farmerId = this.router.getCurrentNavigation().extras.state.id\r\n      localStorage.setItem('farmerId', this.farmerId)\r\n    } else {\r\n      this.farmerId = localStorage.getItem('farmerId')\r\n    }\r\n\r\n    this.resetForm = formBuilder.group({\r\n      \"newPassword\": ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.onGetFarmer(this.farmerId)\r\n\r\n  }\r\n\r\n  onGetFarmer(id) {\r\n    this.superuserservice.getFarmer(id)\r\n      .subscribe((response) => {\r\n        console.log('onGetFarmeR response: ', response)\r\n        this.farmer = response\r\n      })\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n  onSubmit() {\r\n    const resetFormVal = this.resetForm.value\r\n    console.log('resetFormVal: ', resetFormVal)\r\n\r\n    this.superuserservice.changePass(this.farmerId, resetFormVal)\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.router.navigate(['allaccounts'])\r\n      })\r\n  }\r\n\r\n}\r\n","const initialState = {\r\n    token: ''\r\n}\r\n\r\ninterface farmerInfo {\r\n    role: string,\r\n    rating: number,\r\n    _id: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string\r\n}\r\n\r\ninterface IUser {\r\n    exp: number,\r\n    farmer: farmerInfo\r\n    iat: number\r\n}\r\n\r\ninterface ITokenObject {\r\n    token: string,\r\n    userInfo: IUser\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SETTOKEN':\r\n            localStorage.setItem('token', JSON.stringify(action.payload))\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n\r\n        case 'LOGOUT':\r\n\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: ''\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // signUp(userInfo) {\r\n  //   console.log(\"AuthService SignUp UserInfo: \", userInfo)\r\n  //   return this.http.post('http://localhost:3000/farmersignup', userInfo)\r\n  // }\r\n\r\n  // signIn(creds) {\r\n  //   console.log(\"AuthService SignIn creds: \", creds)\r\n  //   return this.http.post('http://localhost:3000/farmersignin', creds)\r\n  // }\r\n\r\n  signUp(userInfo) {\r\n    console.log(\"AuthService SignUp UserInfo: \", userInfo)\r\n    return this.http.post('https://cs583finalapi.herokuapp.com/farmersignup', userInfo)\r\n  }\r\n\r\n  signIn(creds) {\r\n    console.log(\"AuthService SignIn creds: \", creds)\r\n    return this.http.post('https://cs583finalapi.herokuapp.com/farmersignin', creds)\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FarmerService {\r\n\r\n  token: string = ''\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('AppStore') private appStore\r\n  ) { }\r\n\r\n  getProducts() {\r\n    return this.http.get(\"http://localhost:3000/farmer\")\r\n  }\r\n  getProduct(productId) {\r\n    console.log('from farmerservice productId: ', productId)\r\n    return this.http.get(`http://localhost:3000/farmer/${productId}`)\r\n  }\r\n\r\n  editProduct(productBody) {\r\n    console.log('from farmerservice: ', productBody)\r\n    return this.http.patch(`http://localhost:3000/farmer/${productBody._id}`, productBody)\r\n  }\r\n\r\n  deleteProduct(productId) {\r\n    console.log(\"from farmerservice productId: \", productId)\r\n    return this.http.delete(`http://localhost:3000/farmer/${productId}`)\r\n  }\r\n\r\n  addProduct(productBody) {\r\n    console.log(\"from farmservice addproduct: \", productBody)\r\n    return this.http.post(`http://localhost:3000/farmer/`, productBody)\r\n  }\r\n\r\n  getOrders() {\r\n    return this.http.get(\"http://localhost:3000/farmer/orders\")\r\n  }\r\n\r\n  getOrder(orderId) {\r\n    return this.http.get(`http://localhost:3000/farmer/order/${orderId}`)\r\n  }\r\n\r\n  updateOrderStatus(orderId, body) {\r\n    console.log('body: ', body)\r\n    return this.http.patch(`http://localhost:3000/farmer/orderstatus/${orderId}`, body)\r\n  }\r\n\r\n  viewOrderByStatus(status) {\r\n    console.log('viewOrderByStatus: ', status)\r\n    return this.http.get(`http://localhost:3000/farmer/orders/bystatus/${status}`)\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SuperuserService {\r\n\r\n  token: string = ''\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('AppStore') private appStore\r\n  ) { }\r\n\r\n  getFarmer(id) {\r\n    return this.http.get(`http://localhost:3000/superuser/getfarmer/${id}`)\r\n  }\r\n\r\n  getFarmers() {\r\n    return this.http.get(\"http://localhost:3000/superuser/getfarmers\")\r\n  }\r\n\r\n  getCustomer(id) {\r\n    return this.http.get(`http://localhost:3000/superuser/getcustomer/${id}`)\r\n  }\r\n\r\n  getCustomers() {\r\n    return this.http.get(\"http://localhost:3000/superuser/getcustomers\")\r\n  }\r\n\r\n  farmerActivationToggle(id) {\r\n    console.log('farmerActivationToggle id: ', id)\r\n    return this.http.patch(`http://localhost:3000/superuser/farmeractivationtoggle`,\r\n      { id: id })\r\n  }\r\n\r\n  customerActivationToggle(id) {\r\n    console.log('customerActivationToggle id: ', id)\r\n    return this.http.patch(`http://localhost:3000/superuser/customeractivationtoggle`,\r\n      { id: id })\r\n  }\r\n\r\n  changePass(id, newPass) {\r\n    console.log('changePass from service newPass: ', newPass)\r\n    return this.http.patch(`http://localhost:3000/superuser/farmer/${id}`, newPass)\r\n  }\r\n\r\n  changeCustPass(id, newPass) {\r\n    console.log('changeCustPass from service newPass: ', newPass)\r\n    return this.http.patch(`http://localhost:3000/superuser/customer/${id}`, newPass)\r\n  }\r\n\r\n  getTransactions() {\r\n    return this.http.get(`http://localhost:3000/superuser/transactions`)\r\n  }\r\n\r\n  getOrder(orderId) {\r\n    return this.http.get(`http://localhost:3000/superuser/order/${orderId}`)\r\n  }\r\n\r\n  getRequestsLog() {\r\n    return this.http.get(`http://localhost:3000/superuser/requestlog`)\r\n  }\r\n\r\n  // getProducts() {\r\n  //   return this.http.get(\"http://localhost:3000/farmer\")\r\n  // }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  token = ''\r\n\r\n  constructor(@Inject('AppStore') private appStore) {\r\n\r\n  }\r\n\r\n  intercept(req, next) {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n\r\n    let tokenizedRequest = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.token}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedRequest)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms'\r\n\r\nimport { Router } from '@angular/router'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\ninterface IResponse {\r\n  accessToken: String\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  template: `\r\n  \r\n  <body>\r\n\r\n  <div>\r\n    <h1>Please Sign In</h1>\r\n  </div>\r\n\r\n  <div>\r\n  <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\r\n  \r\n    <div>\r\n        <label for=\"email\">Email </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <br>\r\n    <div>\r\n        <label for=\"password\">Password </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"password\" formControlName=\"password\">\r\n    </div>\r\n    <div class=\"signinbutton\">\r\n      <button type=\"submit\">Sign in!</button>\r\n    </div>\r\n\r\n   \r\n    </form>\r\n\r\n   \r\n  </div>\r\n\r\n\r\n</body>\r\n  `,\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n\r\n\r\n  signInForm: FormGroup\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    @Inject('AppStore') private appStore\r\n  ) {\r\n    this.signInForm = formBuilder.group({\r\n      \"email\": ['', [Validators.required]],\r\n      \"password\": ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    const userFormInfo = this.signInForm.value\r\n    console.log(\"userFormInfo: \", userFormInfo)\r\n\r\n    this.authService.signIn(userFormInfo)\r\n      .subscribe((response: IResponse) => {\r\n        console.log('RESPONSE: ', response)\r\n\r\n        this.appStore.dispatch({\r\n          type: 'SETTOKEN',\r\n          payload: response.accessToken\r\n        })\r\n        this.router.navigate([\"\"])\r\n      })\r\n\r\n    //this.formInvalid = true do this later. \r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <div>\r\n// <button class=\"admin\" (click)=\"navToAdminLogin()\">Site Administrators, Sign In Here!</button>\r\n// </div>\r\n\r\n// navToAdminLogin() {\r\n//   this.router.navigate([\"adminlogin\"])\r\n// }\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms'\r\n\r\nimport { Router } from '@angular/router'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  template: `\r\n\r\n<body>\r\n\r\n  <h1>Create an account</h1>\r\n  \r\n  <div>\r\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" formControlName=\"firstName\">  \r\n      </div>\r\n    <br>\r\n    <div>\r\n        <label for=\"lastName\">Last Name </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" formControlName=\"lastName\">\r\n    </div>\r\n    <br>\r\n    <div>\r\n        <label for=\"email\">Email </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <br>\r\n    <div>\r\n        <label for=\"password\">Password </label> <br>\r\n        <input type=\"text\" class=\"form-control\" id=\"password\" formControlName=\"password\">\r\n    </div>\r\n\r\n  <button class=\"createaccountbutton\" type=\"submit\">Create Account!</button>\r\n\r\n    </form>\r\n  </div>\r\n</body>\r\n  \r\n  `,\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\n\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    @Inject('AppStore') private appStore\r\n  ) {\r\n    this.signUpForm = formBuilder.group({\r\n      \"firstName\": ['', [Validators.required]],\r\n      \"lastName\": ['', [Validators.required]],\r\n      \"email\": ['', [Validators.required]],\r\n      \"password\": ['', [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    const userFormInfo = this.signUpForm.value\r\n    console.log(\"userFormInfo: \", userFormInfo)\r\n\r\n    this.authService.signUp(userFormInfo)\r\n      .subscribe((response) => {\r\n        console.log(response)\r\n        this.router.navigate([\"signin\"])\r\n      })\r\n\r\n    //this.formInvalid = true do this later. \r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  template: `\r\n    <p>This is test</p>\r\n  `,\r\n  styleUrls: ['./test.component.css']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FarmerService } from '../services/farmer.service';\r\nimport { Router } from '@angular/router';\r\nimport { SuperuserService } from '../services/superuser.service';\r\n\r\ninterface IFarmerDetails {\r\n  role: string,\r\n  rating: number,\r\n  _id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string\r\n}\r\n\r\ninterface ICustomerDetails {\r\n  email: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  _id: string\r\n}\r\n\r\ninterface IProductDetails {\r\n  productId: string,\r\n  productName: string,\r\n  price: number,\r\n  qty: number\r\n}\r\n\r\ninterface IOrder {\r\n  _id: string,\r\n  status: string,\r\n  customer: ICustomerDetails,\r\n  farmer: IFarmerDetails,\r\n  products: Array<IProductDetails>,\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-transactiondetails',\r\n  template: `\r\n        <app-nav-bar [navToken]=\"token\" (logoutEvent)=\"parentLogOut($event)\"></app-nav-bar>\r\n\r\n        <p>\r\n    Order ID: {{this.order._id}}<br>\r\n    Status: {{this.order.status}}<br><br>\r\n    Customer Name: {{this.order.customer.firstName}} {{this.order.customer.lastName}} <br>\r\n    Customer E-mail: {{this.order.customer.email}}\r\n    </p>\r\n\r\n    \r\n    <div class=\"ordertablediv\">\r\n  <div class=\"ordertable\">\r\n    <table>\r\n    <thead>\r\n         <tr>\r\n            <th>Product Purchased</th>\r\n            <th>Price</th>\r\n         </tr>\r\n      </thead>\r\n      <tbody>\r\n         <tr *ngFor=\"let item of this.order.products\">\r\n            <td>{{ item.productName }}</td>\r\n            <td>{{ item.price }}</td>\r\n         \r\n         </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n\r\n  <p class=\"ordertotal\">Order total: $ {{priceTotal}}</p>\r\n  \r\n  `,\r\n  styleUrls: ['./transactiondetails.component.css']\r\n})\r\nexport class TransactiondetailsComponent implements OnInit {\r\n  token: string\r\n  orderId: string\r\n  order: IOrder\r\n  priceTotal: number\r\n\r\n  constructor(\r\n    @Inject('AppStore') private appStore,\r\n    private superuserservice: SuperuserService,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.router.getCurrentNavigation().extras.state) {\r\n      this.orderId = this.router.getCurrentNavigation().extras.state.id\r\n      localStorage.setItem('orderId', this.orderId)\r\n    } else {\r\n      this.orderId = localStorage.getItem('orderId')\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.appStore.getState().token) {\r\n      this.token = this.appStore.getState().token\r\n    } else if (localStorage.getItem('token')) {\r\n      this.token = JSON.parse(localStorage.getItem('token'))\r\n    }\r\n\r\n    this.superuserservice.getOrder(this.orderId)\r\n      .subscribe((response: IOrder) => {\r\n        console.log(\"getOrder Response: \", response)\r\n        this.order = response\r\n        console.log(\"this.order.products: \", this.order.products)\r\n        this.priceTotal = this.calcTotal()\r\n        console.log(\"this.priceTotal: \", this.priceTotal)\r\n\r\n      })\r\n\r\n  }\r\n\r\n  calcTotal() {\r\n    let total: number = 0\r\n    for (let item of this.order.products) {\r\n      total = total + item.price\r\n    }\r\n    return total\r\n  }\r\n\r\n  parentLogOut($event) {\r\n    this.appStore.dispatch({\r\n      type: 'LOGOUT'\r\n    })\r\n    this.token = ''\r\n    localStorage.removeItem('orderId')\r\n    this.router.navigate([\"\"])\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}